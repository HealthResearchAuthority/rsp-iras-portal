@model AddUpdateReviewBodyModel

@{
    string disableTitle = "Confirm to disable - Manage review bodies - System Administration";
    string enableTitle = "Confirm to enable- Manage review bodies - System Administration";
    ViewData["Title"] = ViewBag.Mode == "disable" ? disableTitle : enableTitle;
    var buttonText = "Confirm";
    var heading = ViewBag.Mode == "disable" ? "Confirm that you want to disable" : "Confirm that you want to enable";
    var hint = ViewBag.Mode == "disable" ? "You are about to disable this review body" : "You are about to enable this review body";
    var submitActionName = "rbc:confirmstatusupdate";
    var style = ViewBag.Mode == "disable" ? "govuk-button govuk-button--warning" : "govuk-button";
}

<form method="get">
    @* @section is added for the back button, so that we can render something below the back button
        and before the RenderBody() in the _Layout.cshtml. As RenderBody() renders anything that is not within
        the named section *@
    @section BackNavigation {
        <partial name="_BackNavigation" model="@("rbc:viewreviewbody", "Back", new Dictionary<string, string>(){{"Id", Model.Id.ToString()}})" />
    }
</form>

<h1 style="margin-top:30px" class="govuk-heading-l">@heading @Model.RegulatoryBodyName</h1>

<p class="govuk-body">
    @hint
</p>

<form method="post">
    <input type="hidden" asp-for="Id" />
    <input type="hidden" asp-for="IsActive" />
    <input type="hidden" asp-for="RegulatoryBodyName" />
    @{
        ViewBag.Style = style;
    }
    <partial name="_SubmitButton" model="@(submitActionName, buttonText, new Dictionary<string, string>())" />
</form>