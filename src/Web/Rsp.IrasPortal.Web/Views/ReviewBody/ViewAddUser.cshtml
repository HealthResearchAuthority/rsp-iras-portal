@using Rsp.IrasPortal.Application.Constants
@using Rsp.IrasPortal.Web.Areas.Admin.Models
@model ReviewBodyListUsersModel

@{
    ViewBag.Active = "reviewBodies";
    ViewBag.Title = "View review body";
}

@* @section is added for the back button, so that we can render something below the back button
    and before the RenderBody() in the _Layout.cshtml. As RenderBody() renders anything that is not within
    the named section *@
@section BackNavigation {
    <partial name="_BackNavigation" model="@("rbc:viewreviewbodyusers", "Back", new Dictionary<string, string> { { "ReviewBodyId", Model.ReviewBody.Id.ToString() } })" />
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-l">Search for user to add to review body</h1>
        <p class="govuk-body">Search for an existing user profile to assign to this review body</p>
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <form method="get">
            <label class="govuk-label" for="SearchUser"><b>Find a user</b></label>
            <label class="govuk-label">You can search by first name, last name or email address</label>
            <input class="govuk-input govuk-!-width-two-thirds" id="SearchQuery" name="SearchQuery" type="text" value="@(Model.Pagination?.SearchQuery ?? string.Empty)">
            <input hidden readonly name="ReviewBodyId" value="@Model.ReviewBody.Id" />
            <input hidden readonly name="PageSize" value="@Model.Pagination?.PageSize" />
            <partial name="_SubmitButton" model="@("rbc:viewadduser", "Search", new Dictionary<string, string>())" />
        </form>
    </div>
    @if (Model.Users != null && Model.Users.Any())
    {
        <div class="govuk-grid-column-full">
            <div class="govuk-table-wrapper">

                <table class="govuk-table govuk-table-users">
                    <thead>
                        <tr class="govuk-table__row govuk-table__header-sortable govuk-body-s">
                            <th class="govuk-table__header govuk-table--name">First name</th>
                            <th class="govuk-table__header govuk-table--name">Last name</th>
                            <th class="govuk-table__header govuk-table--email line-break-anywhere">Email address</th>
                            <th class="govuk-table__header">Status</th>
                            <th class="govuk-table__header">Last logged in</th>
                            <th class="govuk-table__header">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model.Users)
                        {
                            <tr class="govuk-table__row">
                                <td class="govuk-table__cell">@user.FirstName</td>
                                <td class="govuk-table__cell">@user.LastName</td>
                                <td class="govuk-table__cell line-break-anywhere">@user.Email</td>
                                <td class="govuk-table__cell">
                                    @if (!string.IsNullOrEmpty(user.Status))
                                    {
                                        var statusClass = string.Equals(user.Status, IrasUserStatus.Active, StringComparison.InvariantCultureIgnoreCase) ? "govuk-tag--green" : "govuk-tag--red";

                                        <strong class="govuk-tag @statusClass">@user.Status</strong>
                                    }
                                </td>
                                <td class="govuk-table__cell">@(user.LastLogin.HasValue ? user.LastLogin.Value.ToString("dd MMM yyyy") : string.Empty)</td>
                                <td class="govuk-table__cell">
                                    <a class="govuk-link" asp-route="rbc:confirmadduser" asp-route-userId="@user.Id"
                                       asp-route-reviewBodyId="@Model.ReviewBody.Id.ToString()">Add user</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <partial name="_Pagination" model="@Model.Pagination" />
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(Model.Pagination?.SearchQuery))
    {
        <div class="govuk-grid-column-two-thirds">
            <h1 class="govuk-heading-l">No results found</h1>
            <p class="govuk-body">
                Check your spelling or enter another search term and try again. If no results are found, go to Manage users where you can check if a user profile exists and create one if needed.
            </p>
            <p class="govuk-body">
                <a class="govuk-link" asp-route="rbc:viewreviewbodyusers" asp-all-route-data="@(new Dictionary<string, string> { { "ReviewBodyId", Model.ReviewBody.Id.ToString() } })">Back to Users for @Model.ReviewBody.OrganisationName</a>
            </p>
            <p class="govuk-body">
                <a class="govuk-link" asp-route="admin:users">Manage users</a>
            </p>
        </div>
    }
</div>