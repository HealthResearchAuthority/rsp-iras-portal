@using Rsp.IrasPortal.Application.Constants;
@using Rsp.IrasPortal.Application.DTOs.Responses;
@model ProjectOverviewModel

@{
	ViewBag.Title = "Project overview";
	ViewBag.Active = ProjectOverview.ProjectDetails;
}

@{
	var routeName = (ViewData["BackRoute"] as string) ?? "app:Welcome";
	var routeValues = ViewData["BackRouteValues"] as Dictionary<string, string>
					  ?? new Dictionary<string, string>();
    var modificationId = Context.Request.Query["modificationId"].ToString();
    bool addIrasIdInFirstGroup = true;
}

@section Breadcrumb {
	@await Html.PartialAsync("_Breadcrumb", new List<(string, string?)>
	{
		("My research", Url.RouteUrl("app:welcome"))
	})
}

@if (TempData[TempDataKeys.ShowNotificationBanner] is not null)
{
	<partial name="_NotificationBanner" model="@("Success", $"Modification {modificationId} has been successfully deleted")" />
}


<partial name="_NavigationHeaderPartial" model="@Model" />

<div class="govuk-grid-row">
    <div class="govuk-width-container govuk-!-margin-top-4">
        @foreach (var group in Model.SectionGroupQuestions)
        {
        <h2 class="govuk-heading-m">@group.SectionGroup</h2>
        <dl class="govuk-summary-list">

            @if (addIrasIdInFirstGroup)
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        IRAS ID
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @Model.IrasId
                    </dd>
                </div>

                addIrasIdInFirstGroup = false;
            }

            @foreach (var question in group.Questions)
            {
                string questionText = string.IsNullOrWhiteSpace(question.ShortQuestionText) ? question.QuestionText : question.ShortQuestionText;

                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">@questionText</dt>
                    <dd class="govuk-summary-list__value">
                        @Html.Raw(question.GetDisplayText(includePrompt: false))
                    </dd>
                </div>
            }           
        </dl>            
        }
    </div>
</div>