@using Rsp.IrasPortal.Application.Constants
@using Rsp.IrasPortal.Web.Areas.Admin.Models
@model UserViewModel

@{
	var edit = !string.IsNullOrEmpty(Model.Id);
	var editNewUserUrl = "/admin/users/editnewuser";
}

<input type="hidden" asp-for="Status" name="Status" value="@(Model.Status ?? string.Empty)" />
<table class="govuk-table">
	<thead>
		<tr>
			<th></th>
			<th></th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		<tr class="govuk-table__row">
			<td class="govuk-table__cell"><b>Title</b></td>
			<td class="govuk-table__cell">
				@Model.Title
				<input type="hidden" asp-for="Title" name="Title" value="@Model.Title" />
			</td>
			<td class="govuk-table__cell govuk-table__cell--numeric">
				@{
					await RenderEditLink();
				}
			</td>
		</tr>

		<tr class="govuk-table__row">
			<td class="govuk-table__cell"><b>First name</b></td>
			<td class="govuk-table__cell">
				@Model.GivenName
				<input type="hidden" asp-for="GivenName" name="FirstName" value="@Model.GivenName" />
			</td>
			<td class="govuk-table__cell govuk-table__cell--numeric">
				@{
					await RenderEditLink();
				}
			</td>
		</tr>

		<tr class="govuk-table__row">
			<td class="govuk-table__cell"><b>Last name</b></td>
			<td class="govuk-table__cell">
				@Model.FamilyName
				<input type="hidden" asp-for="FamilyName" name="LastName" value="@Model.FamilyName" />
			</td>
			<td class="govuk-table__cell govuk-table__cell--numeric">
				@{
					await RenderEditLink();
				}
			</td>
		</tr>

		<tr class="govuk-table__row">
			<td class="govuk-table__cell"><b>Email address</b></td>
			<td class="govuk-table__cell">
				@Model.Email
				<input type="hidden" asp-for="Email" name="Email" value="@Model.Email" />
			</td>
			<td class="govuk-table__cell govuk-table__cell--numeric">
				@{
					await RenderEditLink();
				}
			</td>
		</tr>

		<tr class="govuk-table__row">
			<td class="govuk-table__cell"><b>Telephone</b></td>
			<td class="govuk-table__cell">
				@Model.Telephone
				<input type="hidden" asp-for="Telephone" name="Telephone" value="@Model.Telephone" />
			</td>
			<td class="govuk-table__cell govuk-table__cell--numeric">
				@{
					await RenderEditLink();
				}
			</td>
		</tr>

		<tr class="govuk-table__row">
			<td class="govuk-table__cell"><b>Organisation</b></td>
			<td class="govuk-table__cell">
				@Model.Organisation
				<input type="hidden" asp-for="Organisation" name="Organisation" value="@Model.Organisation" />
			</td>
			<td class="govuk-table__cell govuk-table__cell--numeric">
				@{
					await RenderEditLink();
				}
			</td>
		</tr>

		<tr class="govuk-table__row">
			<td class="govuk-table__cell"><b>Job title</b></td>
			<td class="govuk-table__cell">
				@Model.JobTitle
				<input type="hidden" asp-for="JobTitle" name="JobTitle" value="@Model.JobTitle" />
			</td>
			<td class="govuk-table__cell govuk-table__cell--numeric">
				@{
					await RenderEditLink();
				}
			</td>
		</tr>

		<tr class="govuk-table__row">
			<td class="govuk-table__cell"><b>Role</b></td>
			<td class="govuk-table__cell text-capitalize">
				@{
					var selectedRoles = Model.UserRoles != null
					? string.Join(", ", Model.UserRoles.Where(r => r.IsSelected).Select(r => r?.Name?.Replace("_", " ")))
					: string.Empty;
				}

				@selectedRoles
				@foreach (var (role, index) in Model.UserRoles!.Select((role, index) => (role, index)))
				{
					<input type="hidden" asp-for="UserRoles![index].Id" />
					<input type="hidden" asp-for="UserRoles![index].Name" />
					<input type="hidden" asp-for="UserRoles![index].IsSelected" />
				}
			</td>
			<td class="govuk-table__cell govuk-table__cell--numeric">
				@{
					await RenderEditLink();
				}
			</td>
		</tr>

		@if (Model.UserRoles != null && Model.UserRoles.Any(role => role.Name == "operations"))
		{
			<tr class="govuk-table__row">
				<td class="govuk-table__cell"><b>Committee</b></td>
				<td class="govuk-table__cell">
				</td>
				<td class="govuk-table__cell govuk-table__cell--numeric">
					@{
						await RenderEditLink();
					}
				</td>
			</tr>
		}

		@if (Model.UserRoles != null && Model.UserRoles.Any(role => role.Name == "operations") && Model.Country != null && Model.Country.Any())
		{
			<tr class="govuk-table__row">
				<td class="govuk-table__cell"><b>Country</b></td>
				<td class="govuk-table__cell">
					@string.Join(", ", Model.Country)
					@for (int i = 0; i <= Model.Country.Count - 1; i++)
					{
						<input type="hidden" asp-for="Country[@i]" name="Country[@i]" value="@Model.Country[i]" />
					}
				</td>
				<td class="govuk-table__cell govuk-table__cell--numeric">
					@{
						await RenderEditLink();
					}
				</td>
			</tr>
		}

		@if (Model.UserRoles != null && Model.UserRoles.Any(role => role.Name == "operations") && Model.AccessRequired != null && Model.AccessRequired.Any())
		{
			<tr class="govuk-table__row">
				<td class="govuk-table__cell"><b>Access required</b></td>
				<td class="govuk-table__cell">
					@string.Join(", ", Model.AccessRequired)
					@for (int i = 0; i <= Model.AccessRequired.Count - 1; i++)
					{
						<input type="hidden" asp-for="AccessRequired[@i]" name="AccessRequired[@i]" value="@Model.AccessRequired[i]" />
					}
				</td>
				<td class="govuk-table__cell govuk-table__cell--numeric">
					@{
						await RenderEditLink();
					}
				</td>
			</tr>
		}

		@if (Model.UserRoles != null && Model.UserRoles.Any(role => role.Name == "operations"))
		{
			<tr class="govuk-table__row">
				<td class="govuk-table__cell"><b>Review body</b></td>
				<td class="govuk-table__cell">
				</td>
				<td class="govuk-table__cell govuk-table__cell--numeric">
					@{
						await RenderEditLink();
					}
				</td>
			</tr>
		}

		@if (edit)
		{
			<tr class="govuk-table__row">
				<td class="govuk-table__cell"><b>Audit</b></td>
				<td class="govuk-table__cell">
                    <a 
                        class="govuk-link"
                        asp-route="admin:useraudittrail" 
                        asp-route-email="@Model.Email" 
                        asp-route-userId="@Model.Id" 
                        asp-route-name="@Model.GivenName @Model.FamilyName" 
                    >
                        View this user's audit history
                    </a>
				</td>
				<td class="govuk-table__cell govuk-table__cell--numeric"></td>
			</tr>

			<tr class="govuk-table__row">
				<td class="govuk-table__cell"><b>Last updated</b></td>
				<td class="govuk-table__cell">
					@(Model.LastUpdated.HasValue ? Model.LastUpdated.Value.ToString("dd MMMM yyyy HH:mm") : string.Empty)
				</td>
				<td class="govuk-table__cell govuk-table__cell--numeric"></td>
			</tr>
		}


	</tbody>
</table>

@{
	async Task RenderEditLink()
	{
		if (edit)
		{
			<a class="govuk-link" asp-route="admin:edituser" asp-route-userId="@Model.Id"
			   asp-route-email="@Model.Email">Change</a>
		}
		else
		{
			<button class="govuk-link-button" type="submit" formaction="@editNewUserUrl">Change</button>
		}
	}
}