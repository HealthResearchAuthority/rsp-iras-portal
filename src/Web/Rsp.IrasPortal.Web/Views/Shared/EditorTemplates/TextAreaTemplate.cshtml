@model QuestionnaireViewModel

@{
    var index = (int)ViewBag.Index;
    var question = Model.Questions[index];

    var rules = question.Rules;
    var conditional = !(question.IsMandatory || question.IsOptional) && rules.Count > 0;
    var parents = conditional ? string.Join(',', rules.Select(rule => rule.ParentQuestionId)) : "";
    var questionId = conditional ? question.QuestionId : "";

    var sizeRule = rules.FirstOrDefault(x => x.Conditions.SingleOrDefault(y => y.Operator == "SIZE") != null);
    var condition = sizeRule?.Conditions.FirstOrDefault(x => x.Operator == "SIZE");
    var conditionValue = condition?.Value;

    var hintHtml = rules.Count > 0
        ? string.Join("", rules.Select(r => $"<p>{r.Description}</p>"))
        : "";

    var types = (question.QuestionType.ToLower(), question.DataType.ToLower());
    var inputType = types == ("text", "email") ? "email" : "text";
}

<div class="govuk-form-group @(ViewData.ModelState[$"Questions[{index}].AnswerText"]?.Errors.Any() == true ? "govuk-form-group--error" : "")">
	<label class="govuk-label govuk-label--s"
		   asp-for="Questions[index].AnswerText"
		   aria-describedby="sponsor-modification-reference-hint">
		@Model.Questions[index].QuestionText
	</label>

	<span class="govuk-error-message"
		  asp-validation-for="Questions[@index].AnswerText">
	</span>
	
	<div class="govuk-form-group govuk-character-count"
		 data-module="govuk-character-count"
		 data-maxlength="@conditionValue">

		<textarea asp-for="Questions[index].AnswerText"
				  id="Questions[@index].AnswerText"
				  name="Questions[@index].AnswerText"
				  class="govuk-textarea govuk-js-character-count"
				  rows="5"
				  aria-describedby="with-hint-info with-hint-hint">
		</textarea>

		<div id="Questions[@index].AnswerText-info"
			 class="govuk-hint govuk-character-count__message">
			@hintHtml
		</div>
	</div>
</div>
