@using Rsp.IrasPortal.Application.DTOs
@model Rsp.IrasPortal.Application.DTOs.QuestionSetDto

@{
	var flowStep = ViewData["Step"] as string ?? "version";
    var versionId = Model.Version?.VersionId ?? "";
    var questions = Model.Questions?.ToList() ?? new List<QuestionDto>();
	var currentIndex = ViewData["QuestionIndex"] as int? ?? (questions.Count > 0 ? questions.Count - 1 : 0);

	var isEditing = currentIndex < questions.Count;

    var headingText = isEditing ? $"Edit Question ID: {questions[currentIndex].QuestionId}" : "Add new question";

    var validQuestions = questions
        .Where(q =>
            !string.IsNullOrWhiteSpace(q.QuestionId) &&
            !string.IsNullOrWhiteSpace(q.SectionId) &&
            !string.IsNullOrWhiteSpace(q.Section) &&
            q.Sequence > 0 &&
            !string.IsNullOrWhiteSpace(q.QuestionText) &&
            !string.IsNullOrWhiteSpace(q.QuestionType) &&
            (
                q.QuestionType?.ToLowerInvariant() is not ("date" or "boolean" or "rts:org_lookup")
                    ? !string.IsNullOrWhiteSpace(q.DataType)
                    : true
            )
        )
        .ToList();
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-l">Create a Question Set</h1>

        @if (flowStep == "version")
        {
            <form asp-action="CreateVersion" asp-controller="QuestionSet" method="post">
                <fieldset>
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">Version details</legend>

                    @if (!string.IsNullOrWhiteSpace(Model.Version?.VersionId) && Convert.ToBoolean(ViewData["LockVersionId"]))
                    {
                        <p class="govuk-hint">The version ID cannot be changed after this point.</p>
                        <rsp-gds-input asp-for="Version.VersionId" label-text="Version ID" readonly="true" disabled="true"/>
                        <input type="hidden" name="Version.VersionId" value="@Model.Version.VersionId"/>
                    }
                    else
                    {
                        <rsp-gds-input asp-for="Version.VersionId" label-text="Version ID"/>
                    }
                </fieldset>

                <button type="submit" class="govuk-button">Next</button>
            </form>
        }
        else if (flowStep == "questions")
        {
            // <!-- Back button -->
            // <form asp-action="Back" asp-controller="QuestionSet" method="post" class="govuk-!-margin-bottom-4">
            // 	<input type="hidden" name="versionId" value="@versionId"/>
            // 	<input type="hidden" name="questionIndex" value="@currentIndex"/>
            // 	<button type="submit" class="govuk-button govuk-button--secondary">Back</button>
            // </form>

            @if (validQuestions.Any())
            {
                <h2 class="govuk-heading-m govuk-!-margin-top-6">Current questions</h2>

                <div class="govuk-grid-column-full">
                    <div class="govuk-table-wrapper">
                        <table class="govuk-table">
                            <thead class="govuk-table__head">
                            <tr class="govuk-table__row govuk-table__header-sortable govuk-body-s">
                                <th scope="col" class="govuk-table__header govuk-!-width-one-quarter">Section ID</th>
                                <th scope="col" class="govuk-table__header govuk-!-width-one-quarter">Section</th>
                                <th scope="col" class="govuk-table__header govuk-!-width-one-quarter">Question Text</th>
                                <th scope="col" class="govuk-table__header govuk-!-width-one-quarter">Question Type</th>


                                <th scope="col" class="govuk-table__header govuk-!-width-one-quarter">Actions</th>
                            </tr>
                            </thead>
                            <tbody class="govuk-table__body">
                            @for (var i = 0; i < validQuestions.Count; i++)
                            {
                                var q = validQuestions[i];
                                <tr class="govuk-table__row">
                                    <td class="govuk-table__cell">@q.SectionId</td>
                                    <td class="govuk-table__cell">@q.Section</td>
                                    <td class="govuk-table__cell">@q.QuestionText</td>
                                    <td class="govuk-table__cell">
                                        @q.QuestionType@(string.IsNullOrWhiteSpace(q.DataType) ? "" : $" - {q.DataType}")
                                    </td>

                                    <td class="govuk-table__cell">
                                        <form asp-action="EditQuestion" asp-controller="QuestionSet" method="post" class="inline-form">
                                            <input type="hidden" name="versionId" value="@versionId"/>
                                            <input type="hidden" name="questionIndex" value="@i"/>
                                            <button type="submit" class="govuk-button govuk-button--secondary">Edit</button>
                                        </form>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
                <form asp-action="Save" asp-controller="QuestionSet" method="post">
                    <input type="hidden" name="versionId" value="@versionId"/>
                    <button type="submit" class="govuk-button govuk-button--primary">Save Question Set</button>
                </form>
            }

            var unsavedQuestion = ViewData["UnsavedQuestion"] as QuestionDto;
            var unsavedAnswers = ViewData["UnsavedAnswer"] as List<AnswerDto>;
            var question = unsavedQuestion ?? (isEditing ? questions[currentIndex] : new QuestionDto { VersionId = versionId, Answers = unsavedAnswers });

            <!-- QUESTION FORM -->
            <form asp-action="AddQuestion" asp-controller="QuestionSet" method="post">
                <input type="hidden" name="versionId" value="@versionId"/>
                <input type="hidden" name="flowStep" value="questions"/>
                <input type="hidden" name="questionIndex" value="@currentIndex"/>

                <h2 class="govuk-heading-m">@headingText</h2>
                @await Html.PartialAsync("_QuestionEditorPartial", question, new ViewDataDictionary(ViewData) { { "Index", currentIndex } })

                <button type="submit" class="govuk-button">@(isEditing ? "Update this question" : "Add this question")</button>
            </form>
        }
        else if (flowStep == "answers")
        {
            // <!-- Back button -->
            // <form asp-action="Back" asp-controller="QuestionSet" method="post" class="govuk-!-margin-bottom-4">
            //     <input type="hidden" name="versionId" value="@versionId"/>
            //     <input type="hidden" name="questionIndex" value="@currentIndex"/>
            //     <input type="hidden" name="flowStep" value="questions" />
            //     <button type="submit" class="govuk-button govuk-button--secondary">Back</button>
            // </form>


            // <h2 class="govuk-heading-m">@headingText</h2>

            var unsavedQuestion = ViewData["UnsavedQuestion"] as QuestionDto;
            var question = unsavedQuestion ?? (isEditing ? questions[currentIndex] : new QuestionDto { VersionId = versionId });

            var answerViewData = new ViewDataDictionary(ViewData)
            {
                ["VersionId"] = versionId,
                ["QuestionAnswerIndex"] = currentIndex,
                ["SelectedAnswerId"] = ViewData[$"SelectedAnswerId_{currentIndex}"]
            };

            answerViewData["IsEditingAnswer"] = ViewData["IsEditingAnswer"];
            answerViewData["OriginalAnswerId"] = ViewData["OriginalAnswerId"];


            @await Html.PartialAsync("_AnswerListPartial", question.Answers.ToList(), answerViewData)
        }
    </div>
</div>