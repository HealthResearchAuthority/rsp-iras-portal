@model string?
@{
    ViewBag.Title = "My account";
}

<authorized auth-params="@new(ShowWhenAuthenticated: false)">
    <div class="govuk-body">

		@await Component.InvokeAsync("LoginLandingPage")        
    </div>
</authorized>

<authorized auth-params="@new()">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h1 class="govuk-heading-l">My Account homepage</h1>
            <p class="govuk-body">This is your account homepage where you can access your workspaces</p>
            <dl class="govuk-summary-list">
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Last logged in:
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @Model
                    </dd>
                </div>
            </dl>
        </div>
    </div>

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h2 class="govuk-heading-m">
                My workspaces
            </h2>
        </div>
    </div>

    @{
        var cards = new[]
        {
            new 
            {
                Roles = "study-wide_reviewer,team_manager,system_administrator,workflow_co-ordinator",
                Title = "Approvals",
                Desc = "Workspace for approvals service staff to receive and process applications and post approval activity for review.",
                Link = "approvalsmenu:welcome"
            },
            new 
            { 
                Roles = "system_administrator",
                Title = "CAG members",
                Desc = "Workspace for members to review applications and post approval activity.",
                Link = ""
            },
            new 
            { 
                Roles = "system_administrator",
                Title = "CAT",
                Desc = "Workspace for CAT staff to receive and process applications and post approval activity for review.",
                Link = ""
            },
            new 
            { 
                Roles = "study-wide_reviewer,team_manager,system_administrator",
                Title = "Member management",
                Desc = "Workspace for staff to view and update committee member records.",
                Link = ""
            },
            new 
            { 
                Roles = "applicant",
                Title = "My research",
                Desc = "Workspace to view and manage the research I am responsible for.",
                Link = "app:welcome"
            },
            new 
            { 
                Roles = "system_administrator",
                Title = "REC members",
                Desc = "Workspace for members to review applications and post approval activity.",
                Link = ""
            },
            new 
            { 
                Roles = "---ROLE_NOT_IMPLEMENTED---",
                Title = "Sponsor",
                Desc = "Workspace to view, manage and authorise the research I am responsible for.",
                Link = ""
            },
            new 
            { 
                Roles = "system_administrator",
                Title = "System administration",
                Desc = "Workspace for system administrators to view and manage system administration functions.",
                Link = "systemadmin:view"
            },
            new 
            { 
                Roles = "system_administrator",
                Title = "Technical Assurance",
                Desc = "Workspace for Technical Assurance staff to receive and process applications and post approval activity for review.",
                Link = ""
            },
            new 
            { 
                Roles = "system_administrator",
                Title = "Technical Assurance reviewers",
                Desc = "Workspace for Technical Assurance reviewers to review applications and post approval activity.",
                Link = ""
            }
        };

        var authorizedChunks = cards
            .Where(item =>
            {
                var roles = item.Roles?.Split(',') ?? [];
                return roles.Any(role => User.IsInRole(role));
            })
            .Select((card, index) => new { card, index })
            .GroupBy(x => x.index / 3)
            .Select(g => g.Select(x => x.card).ToList())
            .ToList();
    }

    @foreach (var row in authorizedChunks)
    {
        <div class="govuk-grid-row">
            @foreach (var item in row)
            {
                <authorized auth-params="@new(Roles: item.Roles)">
                    <div class="govuk-grid-column-one-third">
                        <partial name="_ActionItem" model="@((item.Title, item.Desc, item.Link))" />
                    </div>
                </authorized>
            }
        </div>
    }
</authorized>