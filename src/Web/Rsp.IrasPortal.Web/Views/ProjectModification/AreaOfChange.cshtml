@using Rsp.Gds.Component.Models
@model Rsp.IrasPortal.Web.Models.AreaOfChangeViewModel
@{
	ViewData["Title"] = "Select area of change";
}

<govuk-header />
@{
	// Title used in the validation error summary
	var errorSummaryTitle = "There is a problem";

	(string routeName, string linkText, Dictionary<string, string> routeValues)? navModel = null;
	navModel = ("app:projectoverview", "Back", new());
}
<div class="govuk-width-container">
	@section BackNavigation {
		<partial name="_BackNavigation" model="navModel.Value" />
	}

	<main class="govuk-main-wrapper">
		<div class="govuk-grid-row">
			<div class="govuk-grid-column-two-thirds">
				<form asp-action="ConfirmModificationJourney" method="post">
					<partial name="_ValidationSummary" model="(ViewData.ModelState, errorSummaryTitle)" />

					<partial name="_ProjectModificationSummary" model="Model" />

					@{
						var areaHasError = ViewData.ModelState.TryGetValue(nameof(Model.AreaOfChangeId), out var areaError) && areaError.Errors.Any();
					}

					<div class="govuk-form-group @(areaHasError ? "govuk-form-group--error" : "")">
						<label class="govuk-label" for="AreaOfChangeId">Area of change</label>

						@if (areaHasError)
						{
							<p class="govuk-error-message">
								<span class="govuk-visually-hidden">Error:</span> @areaError.Errors.First().ErrorMessage
							</p>
						}

						<select asp-for="AreaOfChangeId" asp-items="Model.AreaOfChangeOptions" class="govuk-select govuk-!-width-two-thirds" id="AreaOfChangeId"></select>
					</div>


					@{
						var specificHasError = ViewData.ModelState.TryGetValue(nameof(Model.SpecificChangeId), out var specificError) && specificError.Errors.Any();
					}

					<div class="govuk-form-group @(specificHasError ? "govuk-form-group--error" : "")">
						<label class="govuk-label" for="SpecificChangeId">Specific change</label>

						@if (specificHasError)
						{
							<p class="govuk-error-message">
								<span class="govuk-visually-hidden">Error:</span> @specificError.Errors.First().ErrorMessage
							</p>
						}

						<select asp-for="SpecificChangeId" asp-items="Model.SpecificChangeOptions" class="govuk-select govuk-!-width-two-thirds" id="SpecificChangeId"></select>
					</div>

					<div class="save-buttons">
						<button type="submit" class="govuk-button">Save and continue</button>
						@{
							ViewBag.Style = "govuk-button govuk-button--secondary";
						}
						<partial name="_SubmitButton" model="@("app:projectoverview", "Save for later", new Dictionary<string, string> { })" />
					</div>
					<p><a href="#" class="govuk-link">Remove this change</a></p>
				</form>
			</div>
		</div>
	</main>
</div>
<script>
	$(document).ready(function () {
		$('#AreaOfChangeId').on('change', function () {
			const areaId = $(this).val();
			const $specificChangeDropdown = $('#SpecificChangeId');

			// Clear existing options
			$specificChangeDropdown.empty();

			// Fetch specific changes from controller
			$.getJSON(`/ProjectModification/GetSpecificChangesByAreaId`, { areaOfChangeId: areaId })
				.done(function (data) {
					$.each(data, function (index, item) {
						$specificChangeDropdown.append($('<option>', {
							value: item.value,
							text: item.text
						}));
					});
				})
				.fail(function () {
					$specificChangeDropdown.empty().append($('<option>', {
						value: '',
						text: 'Error loading changes'
					}));
				});
		});
	});
</script>
